# Lockplane

> Safe database schema management with shadow DB testing

Define your database schema in `.lp.sql` files, validate them, and apply changes safely.

## Quick Start

1. **Create schema** in `.lp.sql` files (standard PostgreSQL DDL)
2. **Validate**: `lockplane validate sql schema/`
3. **Apply**: `lockplane apply --auto-approve --from $DATABASE_URL --to schema/`

## Commands

### Validate schema
```bash
lockplane validate sql schema/users.lp.sql
lockplane validate sql schema/  # validate entire directory
```

### Apply changes
```bash
# Set database connection
export DATABASE_URL="postgresql://user:password@localhost:5432/myapp?sslmode=disable"

# Apply changes (tests on shadow DB first)
lockplane apply --auto-approve --from $DATABASE_URL --to schema/
```

## Schema Format

Use standard PostgreSQL DDL in `.lp.sql` files:

```sql
-- schema/users.lp.sql
CREATE TABLE users (
  id BIGINT PRIMARY KEY,
  email TEXT NOT NULL,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

CREATE UNIQUE INDEX users_email_idx ON users(email);
```

**Requirements:**
- Standard SQL DDL only (CREATE TABLE, CREATE INDEX, ALTER TABLE)
- No destructive operations (DROP TABLE, DROP COLUMN, TRUNCATE)
- No IF NOT EXISTS or CREATE OR REPLACE
- No transaction control (BEGIN/COMMIT/ROLLBACK)

## Safety Features

**Shadow DB Testing**: All migrations are tested on a shadow database first, so bad changes never touch production.

**Dangerous Pattern Detection**: Lockplane validates SQL and rejects:
- Data loss operations (DROP TABLE, DROP COLUMN, TRUNCATE)
- Non-declarative patterns (IF NOT EXISTS, transaction control)
- Warns about blocking operations (CREATE INDEX without CONCURRENTLY)

## Example Workflow

```bash
# 1. Create schema file
cat > schema/users.lp.sql <<EOF
CREATE TABLE users (
  id BIGINT PRIMARY KEY,
  email TEXT NOT NULL
);
EOF

# 2. Validate
lockplane validate sql schema/

# 3. Apply
lockplane apply --auto-approve --from $DATABASE_URL --to schema/

# 4. Make a change (add column)
# Edit schema/users.lp.sql to add: age INTEGER NOT NULL DEFAULT 0

# 5. Apply again
lockplane apply --auto-approve --from $DATABASE_URL --to schema/
```

## Configuration

```bash
export DATABASE_URL="postgresql://user:password@localhost:5432/myapp?sslmode=disable"
export SHADOW_DATABASE_URL="postgresql://user:password@localhost:5433/myapp_shadow?sslmode=disable"
```

Or use CLI flags: `--db` and `--shadow-db`

---

Project: https://github.com/zakandrewking/lockplane
