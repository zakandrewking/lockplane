{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://lockplane.dev/schema.json",
  "title": "Lockplane Database Schema",
  "description": "Defines the structure of a database schema with tables, columns, and indexes",
  "type": "object",
  "required": ["tables"],
  "properties": {
    "tables": {
      "type": "array",
      "description": "List of database tables",
      "items": {
        "$ref": "#/definitions/Table"
      }
    }
  },
  "definitions": {
    "Table": {
      "type": "object",
      "required": ["name", "columns"],
      "properties": {
        "name": {
          "type": "string",
          "pattern": "^[a-z_][a-z0-9_]*$",
          "description": "Table name in snake_case"
        },
        "columns": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Column"
          },
          "description": "List of table columns"
        },
        "indexes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Index"
          },
          "description": "List of table indexes"
        },
        "foreign_keys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ForeignKey"
          },
          "description": "List of foreign key constraints"
        }
      }
    },
    "Column": {
      "type": "object",
      "required": ["name", "type", "nullable", "is_primary_key"],
      "properties": {
        "name": {
          "type": "string",
          "pattern": "^[a-z_][a-z0-9_]*$",
          "description": "Column name in snake_case"
        },
        "type": {
          "type": "string",
          "description": "PostgreSQL column type (e.g., text, integer, timestamp)"
        },
        "nullable": {
          "type": "boolean",
          "description": "Whether the column allows NULL values"
        },
        "default": {
          "type": "string",
          "description": "Default value expression"
        },
        "is_primary_key": {
          "type": "boolean",
          "description": "Whether this column is part of the primary key"
        }
      }
    },
    "Index": {
      "type": "object",
      "required": ["name", "columns", "unique"],
      "properties": {
        "name": {
          "type": "string",
          "pattern": "^[a-z_][a-z0-9_]*$",
          "description": "Index name in snake_case"
        },
        "columns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of column names in the index"
        },
        "unique": {
          "type": "boolean",
          "description": "Whether this is a unique index"
        }
      }
    },
    "ForeignKey": {
      "type": "object",
      "required": ["name", "columns", "referenced_table", "referenced_columns"],
      "properties": {
        "name": {
          "type": "string",
          "pattern": "^[a-z_][a-z0-9_]*$",
          "description": "Foreign key constraint name in snake_case"
        },
        "columns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "description": "Local column names that reference the foreign table"
        },
        "referenced_table": {
          "type": "string",
          "description": "Name of the referenced table (can include schema, e.g., 'auth.users')"
        },
        "referenced_columns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "description": "Column names in the referenced table"
        },
        "on_delete": {
          "type": "string",
          "enum": ["NO ACTION", "RESTRICT", "CASCADE", "SET NULL", "SET DEFAULT"],
          "description": "Action to take when referenced row is deleted"
        },
        "on_update": {
          "type": "string",
          "enum": ["NO ACTION", "RESTRICT", "CASCADE", "SET NULL", "SET DEFAULT"],
          "description": "Action to take when referenced row is updated"
        }
      }
    }
  }
}
